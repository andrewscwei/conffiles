defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: node:14.13.1

version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-modules-{{ checksum "package-lock.json" }}
            - v1-node-modules-
      - run:
          name: Install APT packages
          command: apt-get update && apt-get install nasm -y
      - run:
          name: Install Node modules
          command: npm install
      - save_cache:
          key: v1-node-modules-{{ checksum "package-lock.json" }}
          paths: [node_modules]
      - run:
          name: Build
          command: BUILD_NUMBER=$CIRCLE_SHA1 npm run build
      - run:
          name: Pack
          command: .circleci/pack.sh
      - store_artifacts:
          path: ~/repo/package
      - persist_to_workspace:
          root: .
          paths:
            - build/
            - node_modules/
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: npm test
  deploy:
    <<: *defaults
    environment:
      - DOCKER_VERSION: 17.03.1-ce
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install Docker
          command: |
            set -x
            curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz
            mv /tmp/docker/* /usr/bin
      - setup_remote_docker
      # - deploy:
      #     name: Deploy to NPM
      #     command: .circleci/deploy_to_npm.sh
      # - deploy:
      #     name: Deploy to GitHub Pages
      #     command: .circleci/deploy_to_gh_pages.sh
      # - deploy:
      #     name: Deploy to Netlify
      #     command: ./.circleci/deploy_to_netlify.sh
      # - deploy:
      #     name: Deploy to Heroku
      #     command: ./.circleci/deploy_to_heroku.sh

workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test:
          requires: [build]
          filters:
            tags:
              only: /.*/
      - deploy:
          requires: [test]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
